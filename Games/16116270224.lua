local obf_stringchar=string.char;local obf_stringbyte=string.byte;local obf_stringsub=string.sub;local obf_bitlib=bit32 or bit ;local obf_XOR=obf_bitlib.bxor;local obf_tableconcat=table.concat;local obf_tableinsert=table.insert;local function LUAOBFUSACTOR_DECRYPT_STR_0(LUAOBFUSACTOR_STR,LUAOBFUSACTOR_KEY) local result={};for i=1, #LUAOBFUSACTOR_STR do obf_tableinsert(result,obf_stringchar(obf_XOR(obf_stringbyte(obf_stringsub(LUAOBFUSACTOR_STR,i,i + 1 )),obf_stringbyte(obf_stringsub(LUAOBFUSACTOR_KEY,1 + (i% #LUAOBFUSACTOR_KEY) ,1 + (i% #LUAOBFUSACTOR_KEY) + 1 )))%256 ));end return obf_tableconcat(result);end local obf_stringmatch=string.match;local obf_tonumber=tonumber;local obf_pcall=pcall;local function obf_adjnqwidqwjhdpoq() local function obf_wrapperfunc(obf_arg) if obf_arg then local StrToNumber=tonumber;local Byte=string.byte;local Char=string.char;local Sub=string.sub;local Subg=string.gsub;local Rep=string.rep;local Concat=table.concat;local Insert=table.insert;local LDExp=math.ldexp;local GetFEnv=getfenv or function() return _ENV;end ;local Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack or table.unpack ;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...) local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,5),LUAOBFUSACTOR_DECRYPT_STR_0("\131\134","\154\173\168\171\23"),function(byte) if (Byte(byte,2)==81) then local FlatIdent_24A02=0;local FlatIdent_12703;while true do if (FlatIdent_24A02==0) then FlatIdent_12703=0;while true do if (FlatIdent_12703==0) then local FlatIdent_7126A=0;while true do if (FlatIdent_7126A==0) then repeatNext=StrToNumber(Sub(byte,1,1));return "";end end end end break;end end else local a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end end end);local function gBit(Bit,Start,End) if End then local FlatIdent_12703=0;local Res;while true do if (FlatIdent_12703==0) then Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1)) ;return Res-(Res%1) ;end end else local FlatIdent_2BD95=0;local Plc;while true do if (FlatIdent_2BD95==0) then Plc=2^(Start-1) ;return (((Bit%(Plc + Plc))>=Plc) and 1) or 0 ;end end end end local function gBits8() local a=Byte(ByteString,DIP,DIP);DIP=DIP + 1 ;return a;end local function gBits16() local FlatIdent_23BE8=0;local FlatIdent_2BD95;local a;local b;while true do if (1==FlatIdent_23BE8) then b=nil;while true do local FlatIdent_31A5A=0;while true do if (FlatIdent_31A5A==0) then if (FlatIdent_2BD95==1) then return (b * 256) + a ;end if (FlatIdent_2BD95==0) then local FlatIdent_5ED46=0;while true do if (FlatIdent_5ED46==1) then FlatIdent_2BD95=1;break;end if (FlatIdent_5ED46==0) then a,b=Byte(ByteString,DIP,DIP + 2 );DIP=DIP + 2 ;FlatIdent_5ED46=1;end end end break;end end end break;end if (FlatIdent_23BE8==0) then FlatIdent_2BD95=0;a=nil;FlatIdent_23BE8=1;end end end local function gBits32() local FlatIdent_60EA1=0;local a;local b;local c;local d;while true do if (FlatIdent_60EA1==1) then return (d * 16777216) + (c * 65536) + (b * 256) + a ;end if (FlatIdent_60EA1==0) then local FlatIdent_51F42=0;while true do if (FlatIdent_51F42==0) then a,b,c,d=Byte(ByteString,DIP,DIP + 3 );DIP=DIP + 4 ;FlatIdent_51F42=1;end if (FlatIdent_51F42==1) then FlatIdent_60EA1=1;break;end end end end end local function gFloat() local FlatIdent_E652=0;local Left;local Right;local IsNormal;local Mantissa;local Exponent;local Sign;while true do if (0==FlatIdent_E652) then Left=gBits32();Right=gBits32();FlatIdent_E652=1;end if (2==FlatIdent_E652) then Exponent=gBit(Right,21,31);Sign=((gBit(Right,32)==1) and  -1) or 1 ;FlatIdent_E652=3;end if (FlatIdent_E652==3) then if (Exponent==0) then if (Mantissa==0) then return Sign * 0 ;else local FlatIdent_8F047=0;while true do if (FlatIdent_8F047==0) then Exponent=1;IsNormal=0;break;end end end elseif (Exponent==2047) then return ((Mantissa==0) and (Sign * (1/0))) or (Sign * NaN) ;end return LDExp(Sign,Exponent-1023 ) * (IsNormal + (Mantissa/(2^52))) ;end if (FlatIdent_E652==1) then IsNormal=1;Mantissa=(gBit(Right,1,20) * (2^32)) + Left ;FlatIdent_E652=2;end end end local function gString(Len) local FlatIdent_31905=0;local Str;local FStr;while true do local FlatIdent_99389=0;while true do if (FlatIdent_99389==1) then if (FlatIdent_31905==2) then FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end FlatIdent_31905=3;end if (FlatIdent_31905==3) then return Concat(FStr);end break;end if (FlatIdent_99389==0) then if (FlatIdent_31905==1) then local FlatIdent_7A75F=0;while true do if (FlatIdent_7A75F==1) then FlatIdent_31905=2;break;end if (FlatIdent_7A75F==0) then Str=Sub(ByteString,DIP,(DIP + Len) -1 );DIP=DIP + Len ;FlatIdent_7A75F=1;end end end if (0==FlatIdent_31905) then Str=nil;if  not Len then local FlatIdent_A9A3=0;while true do if (FlatIdent_A9A3==0) then Len=gBits32();if (Len==0) then return "";end break;end end end FlatIdent_31905=1;end FlatIdent_99389=1;end end end end local gInt=gBits32;local function _R(...) return {...},Select("#",...);end local function Deserialize() local FlatIdent_40CF=0;local Instrs;local Functions;local Lines;local Chunk;local ConstCount;local Consts;while true do if (FlatIdent_40CF==1) then ConstCount=gBits32();Consts={};for Idx=1,ConstCount do local FlatIdent_380E8=0;local FlatIdent_65290;local Type;local Cons;while true do if (FlatIdent_380E8==0) then FlatIdent_65290=0;Type=nil;FlatIdent_380E8=1;end if (FlatIdent_380E8==1) then Cons=nil;while true do if (FlatIdent_65290==1) then if (Type==1) then Cons=gBits8()~=0 ;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;break;end if (FlatIdent_65290==0) then local FlatIdent_39EBF=0;while true do if (FlatIdent_39EBF==0) then Type=gBits8();Cons=nil;FlatIdent_39EBF=1;end if (1==FlatIdent_39EBF) then FlatIdent_65290=1;break;end end end end break;end end end Chunk[3]=gBits8();FlatIdent_40CF=2;end if (FlatIdent_40CF==0) then Instrs={};Functions={};Lines={};Chunk={Instrs,Functions,nil,Lines};FlatIdent_40CF=1;end if (FlatIdent_40CF==2) then for Idx=1,gBits32() do local FlatIdent_6B983=0;local FlatIdent_2D2B8;local Descriptor;while true do if (FlatIdent_6B983==1) then while true do if (FlatIdent_2D2B8==0) then Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local FlatIdent_E0D0=0;local Type;local Mask;local Inst;while true do if (FlatIdent_E0D0==3) then if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;break;end if (FlatIdent_E0D0==0) then Type=gBit(Descriptor,2,3);Mask=gBit(Descriptor,4,6);FlatIdent_E0D0=1;end if (FlatIdent_E0D0==2) then local FlatIdent_2D88C=0;while true do if (1==FlatIdent_2D88C) then FlatIdent_E0D0=3;break;end if (FlatIdent_2D88C==0) then if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end FlatIdent_2D88C=1;end end end if (FlatIdent_E0D0==1) then local FlatIdent_5346B=0;while true do if (1==FlatIdent_5346B) then FlatIdent_E0D0=2;break;end if (FlatIdent_5346B==0) then Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then local FlatIdent_5B4A8=0;local FlatIdent_981A3;while true do if (FlatIdent_5B4A8==0) then FlatIdent_981A3=0;while true do if (FlatIdent_981A3==0) then Inst[3]=gBits16();Inst[4]=gBits16();break;end end break;end end elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16) ;elseif (Type==3) then local FlatIdent_28F3E=0;local FlatIdent_6B983;while true do if (FlatIdent_28F3E==0) then FlatIdent_6B983=0;while true do if (FlatIdent_6B983==0) then Inst[3]=gBits32() -(2^16) ;Inst[4]=gBits16();break;end end break;end end end FlatIdent_5346B=1;end end end end end break;end end break;end if (FlatIdent_6B983==0) then FlatIdent_2D2B8=0;Descriptor=nil;FlatIdent_6B983=1;end end end for Idx=1,gBits32() do Functions[Idx-1 ]=Deserialize();end return Chunk;end end end local function Wrap(Chunk,Upvalues,Env) local Instr=Chunk[1];local Proto=Chunk[2];local Params=Chunk[3];return function(...) local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local VIP=1;local Top= -1;local Vararg={};local Args={...};local PCount=Select("#",...) -1 ;local Lupvals={};local Stk={};for Idx=0,PCount do if (Idx>=Params) then Vararg[Idx-Params ]=Args[Idx + 1 ];else Stk[Idx]=Args[Idx + 1 ];end end local Varargsz=(PCount-Params) + 1 ;local Inst;local Enum;while true do local FlatIdent_29E69=0;while true do if (FlatIdent_29E69==1) then if (Enum<=50) then if (Enum<=24) then if (Enum<=11) then if (Enum<=5) then if (Enum<=2) then if (Enum<=0) then Stk[Inst[2]]();elseif (Enum==1) then Upvalues[Inst[3]]=Stk[Inst[2]];else local FlatIdent_8D1A5=0;local A;while true do if (0==FlatIdent_8D1A5) then A=Inst[2];Stk[A]=Stk[A]();break;end end end elseif (Enum<=3) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end elseif (Enum==4) then local FlatIdent_8B523=0;local A;local Results;local Edx;while true do if (FlatIdent_8B523==1) then Edx=0;for Idx=A,Inst[4] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end break;end if (FlatIdent_8B523==0) then local FlatIdent_45D37=0;while true do if (FlatIdent_45D37==1) then FlatIdent_8B523=1;break;end if (FlatIdent_45D37==0) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Top))};FlatIdent_45D37=1;end end end end else local FlatIdent_90A41=0;local FlatIdent_61EE;local A;while true do if (FlatIdent_90A41==1) then while true do if (0==FlatIdent_61EE) then A=Inst[2];do return Unpack(Stk,A,Top);end break;end end break;end if (FlatIdent_90A41==0) then FlatIdent_61EE=0;A=nil;FlatIdent_90A41=1;end end end elseif (Enum<=8) then if (Enum<=6) then local FlatIdent_7DFA5=0;local FlatIdent_89237;while true do if (FlatIdent_7DFA5==0) then FlatIdent_89237=0;while true do if (FlatIdent_89237==0) then Stk[Inst[2]]=Inst[3]~=0 ;VIP=VIP + 1 ;break;end end break;end end elseif (Enum==7) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];else local FlatIdent_21DDC=0;local FlatIdent_49280;while true do if (FlatIdent_21DDC==0) then FlatIdent_49280=0;while true do if (FlatIdent_49280==0) then Stk[Inst[2]]=Inst[3]~=0 ;VIP=VIP + 1 ;break;end end break;end end end elseif (Enum<=9) then Stk[Inst[2]]=Stk[Inst[3]]/Inst[4] ;elseif (Enum==10) then Env[Inst[3]]=Stk[Inst[2]];else local FlatIdent_1FC27=0;local FlatIdent_7F121;local A;local T;while true do if (FlatIdent_1FC27==1) then T=nil;while true do if (FlatIdent_7F121==0) then A=Inst[2];T=Stk[A];FlatIdent_7F121=1;end if (FlatIdent_7F121==1) then for Idx=A + 1 ,Inst[3] do Insert(T,Stk[Idx]);end break;end end break;end if (FlatIdent_1FC27==0) then FlatIdent_7F121=0;A=nil;FlatIdent_1FC27=1;end end end elseif (Enum<=17) then if (Enum<=14) then if (Enum<=12) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];elseif (Enum>13) then VIP=Inst[3];else local A=Inst[2];local C=Inst[4];local CB=A + 2 ;local Result={Stk[A](Stk[A + 1 ],Stk[CB])};for Idx=1,C do Stk[CB + Idx ]=Result[Idx];end local R=Result[1];if R then local FlatIdent_3B7E2=0;local FlatIdent_19F98;while true do if (FlatIdent_3B7E2==0) then FlatIdent_19F98=0;while true do if (FlatIdent_19F98==0) then Stk[CB]=R;VIP=Inst[3];break;end end break;end end else VIP=VIP + 1 ;end end elseif (Enum<=15) then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);elseif (Enum==16) then Stk[Inst[2]]={};else do return Stk[Inst[2]];end end elseif (Enum<=20) then if (Enum<=18) then local FlatIdent_1013A=0;local A;while true do if (0==FlatIdent_1013A) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));break;end end elseif (Enum==19) then local FlatIdent_75224=0;local A;while true do if (FlatIdent_75224==0) then A=Inst[2];do return Unpack(Stk,A,A + Inst[3] );end break;end end else local FlatIdent_628E3=0;local FlatIdent_22216;local A;while true do if (FlatIdent_628E3==0) then FlatIdent_22216=0;A=nil;FlatIdent_628E3=1;end if (FlatIdent_628E3==1) then while true do if (0==FlatIdent_22216) then A=Inst[2];Stk[A](Stk[A + 1 ]);break;end end break;end end end elseif (Enum<=22) then if (Enum==21) then local FlatIdent_634AF=0;local FlatIdent_DFF4;local A;local Results;local Limit;local Edx;while true do if (FlatIdent_634AF==2) then Edx=nil;while true do if (FlatIdent_DFF4==1) then local FlatIdent_42BD8=0;while true do if (FlatIdent_42BD8==1) then FlatIdent_DFF4=2;break;end if (FlatIdent_42BD8==0) then Top=(Limit + A) -1 ;Edx=0;FlatIdent_42BD8=1;end end end if (FlatIdent_DFF4==2) then for Idx=A,Top do local FlatIdent_869A9=0;while true do if (FlatIdent_869A9==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end break;end if (FlatIdent_DFF4==0) then local FlatIdent_276C2=0;while true do if (FlatIdent_276C2==1) then FlatIdent_DFF4=1;break;end if (FlatIdent_276C2==0) then A=Inst[2];Results,Limit=_R(Stk[A](Stk[A + 1 ]));FlatIdent_276C2=1;end end end end break;end if (FlatIdent_634AF==1) then Results=nil;Limit=nil;FlatIdent_634AF=2;end if (0==FlatIdent_634AF) then FlatIdent_DFF4=0;A=nil;FlatIdent_634AF=1;end end else Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];end elseif (Enum>23) then local FlatIdent_7F3C8=0;local A;local Results;local Limit;local Edx;while true do if (FlatIdent_7F3C8==0) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));FlatIdent_7F3C8=1;end if (FlatIdent_7F3C8==2) then for Idx=A,Top do local FlatIdent_32B97=0;while true do if (FlatIdent_32B97==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end break;end if (1==FlatIdent_7F3C8) then Top=(Limit + A) -1 ;Edx=0;FlatIdent_7F3C8=2;end end elseif (Stk[Inst[2]]~=Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=37) then if (Enum<=30) then if (Enum<=27) then if (Enum<=25) then Stk[Inst[2]]=Inst[3]~=0 ;elseif (Enum==26) then local FlatIdent_7873D=0;local FlatIdent_1FC27;local A;local T;local B;while true do if (FlatIdent_7873D==0) then FlatIdent_1FC27=0;A=nil;FlatIdent_7873D=1;end if (1==FlatIdent_7873D) then T=nil;B=nil;FlatIdent_7873D=2;end if (FlatIdent_7873D==2) then while true do if (FlatIdent_1FC27==1) then B=Inst[3];for Idx=1,B do T[Idx]=Stk[A + Idx ];end break;end if (FlatIdent_1FC27==0) then local FlatIdent_957A4=0;while true do if (FlatIdent_957A4==0) then A=Inst[2];T=Stk[A];FlatIdent_957A4=1;end if (FlatIdent_957A4==1) then FlatIdent_1FC27=1;break;end end end end break;end end else local FlatIdent_20FE3=0;local A;local Cls;while true do if (FlatIdent_20FE3==1) then for Idx=1, #Lupvals do local FlatIdent_8ABD6=0;local List;while true do if (FlatIdent_8ABD6==0) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_6E549=0;local FlatIdent_40070;local Upv;local NStk;local DIP;while true do if (FlatIdent_6E549==2) then while true do if (FlatIdent_40070==0) then local FlatIdent_803FB=0;while true do if (FlatIdent_803FB==1) then FlatIdent_40070=1;break;end if (FlatIdent_803FB==0) then Upv=List[Idz];NStk=Upv[1];FlatIdent_803FB=1;end end end if (1==FlatIdent_40070) then DIP=Upv[2];if ((NStk==Stk) and (DIP>=A)) then local FlatIdent_6C967=0;while true do if (FlatIdent_6C967==0) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end end break;end end break;end if (FlatIdent_6E549==1) then NStk=nil;DIP=nil;FlatIdent_6E549=2;end if (FlatIdent_6E549==0) then FlatIdent_40070=0;Upv=nil;FlatIdent_6E549=1;end end end break;end end end break;end if (FlatIdent_20FE3==0) then A=Inst[2];Cls={};FlatIdent_20FE3=1;end end end elseif (Enum<=28) then local FlatIdent_2FBBD=0;local FlatIdent_2A9F7;local NewProto;local NewUvals;local Indexes;while true do if (0==FlatIdent_2FBBD) then FlatIdent_2A9F7=0;NewProto=nil;FlatIdent_2FBBD=1;end if (FlatIdent_2FBBD==2) then while true do if (FlatIdent_2A9F7==0) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_2A9F7=1;end if (FlatIdent_2A9F7==1) then local FlatIdent_B1F4=0;while true do if (FlatIdent_B1F4==1) then FlatIdent_2A9F7=2;break;end if (FlatIdent_B1F4==0) then Indexes={};NewUvals=Setmetatable({},{[LUAOBFUSACTOR_DECRYPT_STR_0("\194\12\214\137\80\248\43","\52\157\83\191\231")]=function(_,Key) local FlatIdent_91608=0;local Val;while true do if (FlatIdent_91608==0) then local FlatIdent_86E18=0;while true do if (FlatIdent_86E18==0) then Val=Indexes[Key];return Val[1][Val[2]];end end end end end,[LUAOBFUSACTOR_DECRYPT_STR_0("\202\146\43\40\255\120\251\169\32\53","\17\149\205\69\77\136")]=function(_,Key,Value) local FlatIdent_44265=0;local Val;while true do if (0==FlatIdent_44265) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end end});FlatIdent_B1F4=1;end end end if (FlatIdent_2A9F7==2) then for Idx=1,Inst[4] do local FlatIdent_1512=0;local FlatIdent_15A17;local Mvm;while true do if (FlatIdent_1512==1) then while true do if (FlatIdent_15A17==1) then if (Mvm[1]==95) then Indexes[Idx-1 ]={Stk,Mvm[3]};else Indexes[Idx-1 ]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1 ]=Indexes;break;end if (FlatIdent_15A17==0) then VIP=VIP + 1 ;Mvm=Instr[VIP];FlatIdent_15A17=1;end end break;end if (0==FlatIdent_1512) then FlatIdent_15A17=0;Mvm=nil;FlatIdent_1512=1;end end end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end end break;end if (FlatIdent_2FBBD==1) then NewUvals=nil;Indexes=nil;FlatIdent_2FBBD=2;end end elseif (Enum>29) then Stk[Inst[2]]=Inst[3];elseif  not Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=33) then if (Enum<=31) then if (Stk[Inst[2]]~=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum>32) then if (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local FlatIdent_71E8F=0;local A;while true do if (FlatIdent_71E8F==0) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));break;end end end elseif (Enum<=35) then if (Enum==34) then local FlatIdent_51C44=0;local A;local T;while true do if (FlatIdent_51C44==1) then for Idx=A + 1 ,Top do Insert(T,Stk[Idx]);end break;end if (FlatIdent_51C44==0) then A=Inst[2];T=Stk[A];FlatIdent_51C44=1;end end else local FlatIdent_1BAD7=0;local A;while true do if (FlatIdent_1BAD7==0) then A=Inst[2];Stk[A]=Stk[A](Stk[A + 1 ]);break;end end end elseif (Enum>36) then Stk[Inst[2]]=Env[Inst[3]];else local FlatIdent_44603=0;local A;while true do if (FlatIdent_44603==0) then A=Inst[2];do return Unpack(Stk,A,Top);end break;end end end elseif (Enum<=43) then if (Enum<=40) then if (Enum<=38) then Stk[Inst[2]]();elseif (Enum==39) then local FlatIdent_94CF9=0;local FlatIdent_5724B;local NewProto;local NewUvals;local Indexes;while true do if (FlatIdent_94CF9==0) then FlatIdent_5724B=0;NewProto=nil;FlatIdent_94CF9=1;end if (FlatIdent_94CF9==1) then NewUvals=nil;Indexes=nil;FlatIdent_94CF9=2;end if (FlatIdent_94CF9==2) then while true do if (0==FlatIdent_5724B) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_5724B=1;end if (FlatIdent_5724B==1) then local FlatIdent_35AC5=0;while true do if (FlatIdent_35AC5==1) then FlatIdent_5724B=2;break;end if (FlatIdent_35AC5==0) then Indexes={};NewUvals=Setmetatable({},{[LUAOBFUSACTOR_DECRYPT_STR_0("\152\248\242\89\118\215\152","\224\199\167\155\55\18\178")]=function(_,Key) local FlatIdent_5962D=0;local Val;while true do if (0==FlatIdent_5962D) then local FlatIdent_A446=0;while true do if (FlatIdent_A446==0) then Val=Indexes[Key];return Val[1][Val[2]];end end end end end,[LUAOBFUSACTOR_DECRYPT_STR_0("\3\251\116\137\234\69\253\56\193\98","\147\92\164\26\236\157\44")]=function(_,Key,Value) local FlatIdent_1454F=0;local FlatIdent_2593F;local Val;while true do if (FlatIdent_1454F==0) then FlatIdent_2593F=0;Val=nil;FlatIdent_1454F=1;end if (FlatIdent_1454F==1) then while true do if (FlatIdent_2593F==0) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end break;end end end});FlatIdent_35AC5=1;end end end if (FlatIdent_5724B==2) then for Idx=1,Inst[4] do local FlatIdent_37555=0;local FlatIdent_3B08E;local Mvm;while true do if (FlatIdent_37555==1) then while true do if (FlatIdent_3B08E==0) then VIP=VIP + 1 ;Mvm=Instr[VIP];FlatIdent_3B08E=1;end if (FlatIdent_3B08E==1) then if (Mvm[1]==95) then Indexes[Idx-1 ]={Stk,Mvm[3]};else Indexes[Idx-1 ]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1 ]=Indexes;break;end end break;end if (FlatIdent_37555==0) then FlatIdent_3B08E=0;Mvm=nil;FlatIdent_37555=1;end end end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end end break;end end else local A=Inst[2];Stk[A]=Stk[A]();end elseif (Enum<=41) then Stk[Inst[2]]=Stk[Inst[3]]%Inst[4] ;elseif (Enum==42) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;else Stk[Inst[2]]=Stk[Inst[3]]%Inst[4] ;end elseif (Enum<=46) then if (Enum<=44) then local FlatIdent_3CDED=0;local A;while true do if (0==FlatIdent_3CDED) then A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end break;end end elseif (Enum>45) then local FlatIdent_6E549=0;local A;while true do if (FlatIdent_6E549==0) then A=Inst[2];Stk[A](Stk[A + 1 ]);break;end end else local FlatIdent_21CA5=0;local A;while true do if (FlatIdent_21CA5==0) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));break;end end end elseif (Enum<=48) then if (Enum>47) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end else local FlatIdent_7517F=0;local A;local Results;local Limit;local Edx;while true do if (2==FlatIdent_7517F) then for Idx=A,Top do local FlatIdent_3501F=0;local FlatIdent_10DED;while true do if (0==FlatIdent_3501F) then FlatIdent_10DED=0;while true do if (FlatIdent_10DED==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if (0==FlatIdent_7517F) then local FlatIdent_8239F=0;while true do if (FlatIdent_8239F==1) then FlatIdent_7517F=1;break;end if (0==FlatIdent_8239F) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));FlatIdent_8239F=1;end end end if (FlatIdent_7517F==1) then Top=(Limit + A) -1 ;Edx=0;FlatIdent_7517F=2;end end end elseif (Enum==49) then Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]] ;elseif (Inst[2]>Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=75) then if (Enum<=62) then if (Enum<=56) then if (Enum<=53) then if (Enum<=51) then local FlatIdent_58E6A=0;local FlatIdent_30F75;local A;local Results;local Edx;while true do if (FlatIdent_58E6A==0) then FlatIdent_30F75=0;A=nil;FlatIdent_58E6A=1;end if (FlatIdent_58E6A==1) then Results=nil;Edx=nil;FlatIdent_58E6A=2;end if (FlatIdent_58E6A==2) then while true do if (0==FlatIdent_30F75) then local FlatIdent_40FD3=0;while true do if (FlatIdent_40FD3==0) then A=Inst[2];Results={Stk[A](Stk[A + 1 ])};FlatIdent_40FD3=1;end if (FlatIdent_40FD3==1) then FlatIdent_30F75=1;break;end end end if (1==FlatIdent_30F75) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_23B66=0;local FlatIdent_360E8;while true do if (FlatIdent_23B66==0) then FlatIdent_360E8=0;while true do if (FlatIdent_360E8==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end break;end end break;end end elseif (Enum==52) then local FlatIdent_45CCF=0;local FlatIdent_7B2D6;local A;while true do if (FlatIdent_45CCF==1) then while true do if (FlatIdent_7B2D6==0) then A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Inst[3]));break;end end break;end if (FlatIdent_45CCF==0) then FlatIdent_7B2D6=0;A=nil;FlatIdent_45CCF=1;end end else Stk[Inst[2]]=Upvalues[Inst[3]];end elseif (Enum<=54) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];elseif (Enum==55) then do return;end else local FlatIdent_65194=0;local A;while true do if (FlatIdent_65194==0) then A=Inst[2];Stk[A]=Stk[A](Stk[A + 1 ]);break;end end end elseif (Enum<=59) then if (Enum<=57) then local FlatIdent_86E18=0;local A;local T;local B;while true do if (FlatIdent_86E18==1) then B=Inst[3];for Idx=1,B do T[Idx]=Stk[A + Idx ];end break;end if (FlatIdent_86E18==0) then local FlatIdent_559FF=0;while true do if (FlatIdent_559FF==0) then A=Inst[2];T=Stk[A];FlatIdent_559FF=1;end if (FlatIdent_559FF==1) then FlatIdent_86E18=1;break;end end end end elseif (Enum>58) then local FlatIdent_FBDE=0;local FlatIdent_C595;local A;local B;while true do if (FlatIdent_FBDE==0) then FlatIdent_C595=0;A=nil;FlatIdent_FBDE=1;end if (FlatIdent_FBDE==1) then B=nil;while true do if (FlatIdent_C595==1) then Stk[A + 1 ]=B;Stk[A]=B[Inst[4]];break;end if (FlatIdent_C595==0) then A=Inst[2];B=Stk[Inst[3]];FlatIdent_C595=1;end end break;end end elseif (Inst[2]>Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=60) then local FlatIdent_4BE81=0;local FlatIdent_90A69;local A;local Results;local Edx;while true do if (FlatIdent_4BE81==0) then FlatIdent_90A69=0;A=nil;FlatIdent_4BE81=1;end if (FlatIdent_4BE81==2) then while true do if (FlatIdent_90A69==1) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_12E4E=0;local FlatIdent_92514;while true do if (0==FlatIdent_12E4E) then FlatIdent_92514=0;while true do if (FlatIdent_92514==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if (FlatIdent_90A69==0) then local FlatIdent_89126=0;while true do if (FlatIdent_89126==1) then FlatIdent_90A69=1;break;end if (FlatIdent_89126==0) then A=Inst[2];Results={Stk[A](Stk[A + 1 ])};FlatIdent_89126=1;end end end end break;end if (FlatIdent_4BE81==1) then Results=nil;Edx=nil;FlatIdent_4BE81=2;end end elseif (Enum>61) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];else Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];end elseif (Enum<=68) then if (Enum<=65) then if (Enum<=63) then if Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum==64) then local A=Inst[2];local B=Stk[Inst[3]];Stk[A + 1 ]=B;Stk[A]=B[Inst[4]];else Stk[Inst[2]]=Stk[Inst[3]]/Inst[4] ;end elseif (Enum<=66) then local FlatIdent_13B77=0;local A;while true do if (0==FlatIdent_13B77) then A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end break;end end elseif (Enum==67) then VIP=Inst[3];else Stk[Inst[2]]=Inst[3];end elseif (Enum<=71) then if (Enum<=69) then local FlatIdent_87C42=0;local FlatIdent_94CF9;local A;while true do if (FlatIdent_87C42==1) then while true do if (FlatIdent_94CF9==0) then A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Top));break;end end break;end if (0==FlatIdent_87C42) then FlatIdent_94CF9=0;A=nil;FlatIdent_87C42=1;end end elseif (Enum==70) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];else Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);end elseif (Enum<=73) then if (Enum==72) then Stk[Inst[2]][Inst[3]]=Inst[4];else Stk[Inst[2]]={};end elseif (Enum==74) then Stk[Inst[2]][Inst[3]]=Inst[4];else local FlatIdent_97B67=0;local FlatIdent_98327;local A;local Results;local Edx;while true do if (FlatIdent_97B67==1) then Results=nil;Edx=nil;FlatIdent_97B67=2;end if (2==FlatIdent_97B67) then while true do if (FlatIdent_98327==0) then local FlatIdent_12B71=0;while true do if (FlatIdent_12B71==1) then FlatIdent_98327=1;break;end if (FlatIdent_12B71==0) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Top))};FlatIdent_12B71=1;end end end if (FlatIdent_98327==1) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_19FC0=0;local FlatIdent_35AC5;while true do if (0==FlatIdent_19FC0) then FlatIdent_35AC5=0;while true do if (FlatIdent_35AC5==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end break;end end break;end if (FlatIdent_97B67==0) then FlatIdent_98327=0;A=nil;FlatIdent_97B67=1;end end end elseif (Enum<=88) then if (Enum<=81) then if (Enum<=78) then if (Enum<=76) then do return Stk[Inst[2]];end elseif (Enum>77) then local A=Inst[2];local C=Inst[4];local CB=A + 2 ;local Result={Stk[A](Stk[A + 1 ],Stk[CB])};for Idx=1,C do Stk[CB + Idx ]=Result[Idx];end local R=Result[1];if R then local FlatIdent_6C51A=0;local FlatIdent_506A5;while true do if (FlatIdent_6C51A==0) then FlatIdent_506A5=0;while true do if (FlatIdent_506A5==0) then Stk[CB]=R;VIP=Inst[3];break;end end break;end end else VIP=VIP + 1 ;end elseif  not Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=79) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];elseif (Enum==80) then do return;end else local FlatIdent_82AB4=0;local FlatIdent_14124;local A;while true do if (FlatIdent_82AB4==1) then while true do if (0==FlatIdent_14124) then A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Top));break;end end break;end if (FlatIdent_82AB4==0) then FlatIdent_14124=0;A=nil;FlatIdent_82AB4=1;end end end elseif (Enum<=84) then if (Enum<=82) then Upvalues[Inst[3]]=Stk[Inst[2]];elseif (Enum>83) then local FlatIdent_4AB8B=0;local A;local Cls;while true do if (FlatIdent_4AB8B==1) then for Idx=1, #Lupvals do local FlatIdent_93FA5=0;local FlatIdent_3831;local List;while true do if (0==FlatIdent_93FA5) then FlatIdent_3831=0;List=nil;FlatIdent_93FA5=1;end if (FlatIdent_93FA5==1) then while true do if (FlatIdent_3831==0) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_21E03=0;local Upv;local NStk;local DIP;while true do if (FlatIdent_21E03==1) then DIP=Upv[2];if ((NStk==Stk) and (DIP>=A)) then local FlatIdent_2C7C4=0;while true do if (FlatIdent_2C7C4==0) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end end break;end if (FlatIdent_21E03==0) then local FlatIdent_2458=0;while true do if (FlatIdent_2458==1) then FlatIdent_21E03=1;break;end if (FlatIdent_2458==0) then Upv=List[Idz];NStk=Upv[1];FlatIdent_2458=1;end end end end end break;end end break;end end end break;end if (FlatIdent_4AB8B==0) then local FlatIdent_38BA4=0;while true do if (FlatIdent_38BA4==1) then FlatIdent_4AB8B=1;break;end if (FlatIdent_38BA4==0) then A=Inst[2];Cls={};FlatIdent_38BA4=1;end end end end else Stk[Inst[2]]=Upvalues[Inst[3]];end elseif (Enum<=86) then if (Enum==85) then local A=Inst[2];local Results,Limit=_R(Stk[A](Stk[A + 1 ]));Top=(Limit + A) -1 ;local Edx=0;for Idx=A,Top do local FlatIdent_2C010=0;local FlatIdent_8239F;while true do if (FlatIdent_2C010==0) then FlatIdent_8239F=0;while true do if (0==FlatIdent_8239F) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end else local FlatIdent_4D23E=0;local FlatIdent_669F5;local A;while true do if (1==FlatIdent_4D23E) then while true do if (FlatIdent_669F5==0) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));break;end end break;end if (FlatIdent_4D23E==0) then FlatIdent_669F5=0;A=nil;FlatIdent_4D23E=1;end end end elseif (Enum==87) then if Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end else Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]] ;end elseif (Enum<=94) then if (Enum<=91) then if (Enum<=89) then Stk[Inst[2]]=Stk[Inst[3]];elseif (Enum>90) then if (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else Stk[Inst[2]]=Env[Inst[3]];end elseif (Enum<=92) then local FlatIdent_8A8EC=0;local A;local Results;local Limit;local Edx;while true do if (0==FlatIdent_8A8EC) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));FlatIdent_8A8EC=1;end if (2==FlatIdent_8A8EC) then for Idx=A,Top do local FlatIdent_40FD3=0;while true do if (FlatIdent_40FD3==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end break;end if (FlatIdent_8A8EC==1) then Top=(Limit + A) -1 ;Edx=0;FlatIdent_8A8EC=2;end end elseif (Enum==93) then if (Stk[Inst[2]]~=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end else Env[Inst[3]]=Stk[Inst[2]];end elseif (Enum<=97) then if (Enum<=95) then Stk[Inst[2]]=Stk[Inst[3]];elseif (Enum>96) then if (Stk[Inst[2]]~=Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local A=Inst[2];local Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;local Edx=0;for Idx=A,Top do local FlatIdent_696E1=0;local FlatIdent_740DC;while true do if (FlatIdent_696E1==0) then FlatIdent_740DC=0;while true do if (FlatIdent_740DC==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end end elseif (Enum<=99) then if (Enum>98) then local A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Inst[3]));else Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;end elseif (Enum==100) then local FlatIdent_1CFC3=0;local A;local T;while true do if (FlatIdent_1CFC3==0) then local FlatIdent_79F35=0;while true do if (FlatIdent_79F35==0) then A=Inst[2];T=Stk[A];FlatIdent_79F35=1;end if (1==FlatIdent_79F35) then FlatIdent_1CFC3=1;break;end end end if (FlatIdent_1CFC3==1) then for Idx=A + 1 ,Top do Insert(T,Stk[Idx]);end break;end end else Stk[Inst[2]]=Inst[3]~=0 ;end VIP=VIP + 1 ;break;end if (FlatIdent_29E69==0) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_29E69=1;end end end end;end return Wrap(Deserialize(),{},vmenv)(...);end return VMCalletFEnv(),...);else local sdawdwqdq=obf_arg[1];end end if (obf_tonumber(obf_stringmatch(obf_stringmatch(({obf_pcall(obf_wrapperfunc,nil)})[2],":%d+:"),"%d+"))==1) then return obf_wrapperfunc({});else return obf_adjnqwidqwjhdpoq();end end return obf_adjnqwidqwjhdpoq();
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]
